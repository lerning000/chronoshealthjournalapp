# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'ChronosApp' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    # Enable codegen for new architecture
    :fabric_enabled => false,
    :hermes_enabled => true
  )

  post_install do |installer|
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
        # Ensure codegen files are properly included
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_NEW_ARCH_ENABLED=0'
      end
    end
    
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      # :ccache_enabled => true
    )
    
    # Ensure codegen files are generated before build
    installer.pods_project.targets.each do |target|
      if target.name == 'ChronosApp'
        target.build_phases.each do |phase|
          if phase.is_a?(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
            if phase.name == 'Bundle React Native code and images'
              # Add codegen generation before bundling
              phase.shell_script = <<~SCRIPT
                set -e
                
                # Generate codegen files
                export RCT_NEW_ARCH_ENABLED=0
                export RCT_FABRIC_ENABLED=0
                
                WITH_ENVIRONMENT="../node_modules/react-native/scripts/generate-codegen-artifacts.js"
                if [ -f "$WITH_ENVIRONMENT" ]; then
                  node "$WITH_ENVIRONMENT" -p .. -t ios -o build/generated/ios
                fi
                
                # Original bundle script
                export NODE_BINARY=node
                ../node_modules/react-native/scripts/react-native-xcode.sh
              SCRIPT
            end
          end
        end
      end
    end
  end
end
